plugins {
    id("groovy") 
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.7.9"
    id("io.micronaut.test-resources") version "3.7.9"
}

version = "0.1"
group = "org.jacksonlaboratory"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor:1.5.2")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.sql:micronaut-hibernate-jpa")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("jakarta.persistence:jakarta.persistence-api:2.2.3")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.flywaydb:flyway-mysql")
    runtimeOnly("com.h2database:h2:2.1.214")
    implementation('org.apache.lucene:lucene-core:8.5.2')
    implementation('org.apache.lucene:lucene-queryparser:8.5.2')
    implementation 'org.hibernate.search:hibernate-search-mapper-orm:6.1.8.Final'
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("io.micronaut.serde:micronaut-serde-jackson:1.5.2")
    implementation("io.micronaut.flyway:micronaut-flyway")
    implementation("io.micronaut:micronaut-validation")
    implementation("org.monarchinitiative.phenol:phenol-core:2.0.0-RC5")
    implementation("org.monarchinitiative.phenol:phenol-io:2.0.0-RC5")
    implementation("org.monarchinitiative.phenol:phenol-annotations:2.0.0-RC5")

}


application {
    mainClass.set("org.jacksonlaboratory.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

tasks.register('prepareData') {
    copy {
        from "${projectDir}/data/"
        into "build/docker/main/data/"
    }
}

tasks {
    dockerfile {
        baseImage("openjdk:11-jre-slim-buster")
        copyFile("data/", "data/")
        environmentVariable(['ONTOLOGY':"${System.env.ONTOLOGY}",
                             'ONTOLOGY_SERVICE_LOAD':"${System.env.ONTOLOGY_SERVICE_LOAD}",
                             'ONTOLOGY_SERVICE_INTERNATIONAL':"${System.env.ONTOLOGY_SERVICE_INTERNATIONAL}"] )
    }

    dockerBuild {
        images = ["${System.env.DOCKER_IMAGE ?: project.name}:$project.version"]
    }

    dockerBuildNative {
        images = ["${System.env.DOCKER_IMAGE ?: project.name}:$project.version"]
    }
}

dockerfile.dependsOn('prepareData')

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("org.jacksonlaboratory.*")
    }
}



